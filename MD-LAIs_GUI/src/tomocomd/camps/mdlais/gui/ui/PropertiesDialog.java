
/*
 * PropertiesDialog.java
 *
 * Created on Feb 23, 2011, 12:01:20 AM
 */
package tomocomd.camps.mdlais.gui.ui;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import nu.xom.Element;
import tomocomd.camps.mdlais.gui.CDKdesc;

/**
 *
 * @author crjacas
 * @autor econtreras
 */
public class PropertiesDialog extends javax.swing.JDialog {

    private final int TOTAL_UNIT_PROPERTIES = 1;
    
    private final int TOTAL_AMINOACID_PROPERTIES = 39;

    private final int TOTAL_AMINOACID_PROPERTIESTAB1 = 16;

    private final int TOTAL_AMINOACID_PROPERTIESTAB2 = 8;
    private final int TOTAL_AMINOACID_PROPERTIES_MDLOVISTAB = 6;
    private final int TOTAL_AMINOACID_PROPERTIES_QUBILSMIDASTAB = 9;

    private int currentAminoacidPropertiesTab0,currentAminoacidPropertiesTab1, currentAminoacidPropertiesTab2,
            currentMDLOVIsProperties, currentQuBilsMIDASProperties;

    private ArrayList<String> list_AminoacidProperties;

    public PropertiesDialog(CDKdesc cdk) {
        super(cdk, true);

        initComponents();

        list_AminoacidProperties = new ArrayList<>();

        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation((screen.width / 2 - getSize().width / 2) - 38, screen.height / 2 - getSize().height / 2);
        setIconImage(new ImageIcon(getClass().getResource("/tomocomd/camps/mdlais/gui/data/appico.png")).getImage());
    }

    public ArrayList<String> getList_AminoacidProperties() {
        return list_AminoacidProperties;
    }

    public void setAminoaAcidPropertiesSelected() {
        propertiesTabbedPane.setSelectedIndex(0);
    }

    public boolean isAtomPropertiesSelected() {
        return propertiesTabbedPane.isEnabledAt(1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        propertiesTabbedPane = new javax.swing.JTabbedPane();
        UnitPropertiesPanel = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        unitPropertyToggleButton = new javax.swing.JToggleButton();
        jPanel28 = new javax.swing.JPanel();
        cb_unit = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        aminoAcidPropertiesPanel = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        aminoAcidPropertyToggleButton = new javax.swing.JToggleButton();
        jPanel20 = new javax.swing.JPanel();
        cb_AminoAcidMass = new javax.swing.JCheckBox();
        cb_SideChainVolume = new javax.swing.JCheckBox();
        cb_z1 = new javax.swing.JCheckBox();
        cb_eci = new javax.swing.JCheckBox();
        cb_hws = new javax.swing.JCheckBox();
        cb_kds = new javax.swing.JCheckBox();
        cb_pie = new javax.swing.JCheckBox();
        cb_isa = new javax.swing.JCheckBox();
        cb_pbs = new javax.swing.JCheckBox();
        cb_pah = new javax.swing.JCheckBox();
        cb_z2 = new javax.swing.JCheckBox();
        cb_z3 = new javax.swing.JCheckBox();
        cb_ptt = new javax.swing.JCheckBox();
        cb_eps = new javax.swing.JCheckBox();
        cb_gcp1 = new javax.swing.JCheckBox();
        cb_gcp2 = new javax.swing.JCheckBox();
        aminoAcidPropertiesPanel1 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        cb_vhse1 = new javax.swing.JCheckBox();
        cb_vhse4 = new javax.swing.JCheckBox();
        cb_vhse6 = new javax.swing.JCheckBox();
        cb_t2 = new javax.swing.JCheckBox();
        cb_t4 = new javax.swing.JCheckBox();
        cb_t3 = new javax.swing.JCheckBox();
        cb_vhse7 = new javax.swing.JCheckBox();
        cb_vhse8 = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        aminoAcidPropertyToggleButton1 = new javax.swing.JToggleButton();
        mdlovisPanel = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        cb_mdl1 = new javax.swing.JCheckBox();
        cb_mdl2 = new javax.swing.JCheckBox();
        cb_mdl3 = new javax.swing.JCheckBox();
        cb_mdl4 = new javax.swing.JCheckBox();
        cb_mdl5 = new javax.swing.JCheckBox();
        cb_mdl6 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel26 = new javax.swing.JPanel();
        mdlovisToggleButton = new javax.swing.JToggleButton();
        qubilsmidasPanel = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        cb_mid1 = new javax.swing.JCheckBox();
        cb_mid2 = new javax.swing.JCheckBox();
        cb_mid3 = new javax.swing.JCheckBox();
        cb_mid6 = new javax.swing.JCheckBox();
        cb_mid8 = new javax.swing.JCheckBox();
        cb_mid7 = new javax.swing.JCheckBox();
        cb_mid4 = new javax.swing.JCheckBox();
        cb_mid5 = new javax.swing.JCheckBox();
        cb_mid9 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        qubilsmidasToggleButton = new javax.swing.JToggleButton();
        jPanel16 = new javax.swing.JPanel();
        b_check_all = new javax.swing.JButton();
        b_uncheck_all = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        b_ok = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Properties");
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(550, 390));
        setMinimumSize(new java.awt.Dimension(550, 390));
        setPreferredSize(new java.awt.Dimension(550, 390));
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        propertiesTabbedPane.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        propertiesTabbedPane.setAutoscrolls(true);
        propertiesTabbedPane.setMaximumSize(new java.awt.Dimension(530, 300));
        propertiesTabbedPane.setMinimumSize(new java.awt.Dimension(530, 300));
        propertiesTabbedPane.setPreferredSize(new java.awt.Dimension(530, 300));
        propertiesTabbedPane.setRequestFocusEnabled(false);

        UnitPropertiesPanel.setMaximumSize(new java.awt.Dimension(560, 260));
        UnitPropertiesPanel.setMinimumSize(new java.awt.Dimension(560, 260));
        UnitPropertiesPanel.setPreferredSize(new java.awt.Dimension(560, 260));
        UnitPropertiesPanel.setLayout(new java.awt.GridBagLayout());

        jPanel27.setMaximumSize(new java.awt.Dimension(100, 30));
        jPanel27.setMinimumSize(new java.awt.Dimension(100, 30));
        jPanel27.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel27.setLayout(new java.awt.GridBagLayout());

        unitPropertyToggleButton.setText("Check");
        unitPropertyToggleButton.setMaximumSize(new java.awt.Dimension(95, 27));
        unitPropertyToggleButton.setMinimumSize(new java.awt.Dimension(95, 27));
        unitPropertyToggleButton.setPreferredSize(new java.awt.Dimension(95, 27));
        unitPropertyToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitPropertyToggleButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel27.add(unitPropertyToggleButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        UnitPropertiesPanel.add(jPanel27, gridBagConstraints);

        jPanel28.setMaximumSize(new java.awt.Dimension(510, 220));
        jPanel28.setMinimumSize(new java.awt.Dimension(510, 220));
        jPanel28.setPreferredSize(new java.awt.Dimension(510, 220));
        jPanel28.setLayout(new java.awt.GridBagLayout());

        cb_unit.setText("(U) Unit");
        cb_unit.setMaximumSize(new java.awt.Dimension(245, 25));
        cb_unit.setMinimumSize(new java.awt.Dimension(245, 25));
        cb_unit.setPreferredSize(new java.awt.Dimension(245, 25));
        cb_unit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_unitActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel28.add(cb_unit, gridBagConstraints);

        jPanel2.setPreferredSize(new java.awt.Dimension(265, 10));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel28.add(jPanel2, gridBagConstraints);

        jPanel1.setPreferredSize(new java.awt.Dimension(10, 170));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel28.add(jPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        UnitPropertiesPanel.add(jPanel28, gridBagConstraints);

        propertiesTabbedPane.addTab("Composition", UnitPropertiesPanel);

        aminoAcidPropertiesPanel.setMaximumSize(new java.awt.Dimension(560, 260));
        aminoAcidPropertiesPanel.setMinimumSize(new java.awt.Dimension(560, 260));
        aminoAcidPropertiesPanel.setPreferredSize(new java.awt.Dimension(560, 260));
        aminoAcidPropertiesPanel.setLayout(new java.awt.GridBagLayout());

        jPanel19.setMaximumSize(new java.awt.Dimension(100, 30));
        jPanel19.setMinimumSize(new java.awt.Dimension(100, 30));
        jPanel19.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel19.setLayout(new java.awt.GridBagLayout());

        aminoAcidPropertyToggleButton.setText("Check");
        aminoAcidPropertyToggleButton.setMaximumSize(new java.awt.Dimension(95, 27));
        aminoAcidPropertyToggleButton.setMinimumSize(new java.awt.Dimension(95, 27));
        aminoAcidPropertyToggleButton.setPreferredSize(new java.awt.Dimension(95, 27));
        aminoAcidPropertyToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aminoAcidPropertyToggleButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel19.add(aminoAcidPropertyToggleButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        aminoAcidPropertiesPanel.add(jPanel19, gridBagConstraints);

        jPanel20.setMaximumSize(new java.awt.Dimension(510, 220));
        jPanel20.setMinimumSize(new java.awt.Dimension(510, 220));
        jPanel20.setPreferredSize(new java.awt.Dimension(510, 220));
        jPanel20.setLayout(new java.awt.GridBagLayout());

        cb_AminoAcidMass.setText("(MM) Mass");
        cb_AminoAcidMass.setMaximumSize(new java.awt.Dimension(245, 25));
        cb_AminoAcidMass.setMinimumSize(new java.awt.Dimension(245, 25));
        cb_AminoAcidMass.setPreferredSize(new java.awt.Dimension(245, 25));
        cb_AminoAcidMass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_AminoAcidMassActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel20.add(cb_AminoAcidMass, gridBagConstraints);

        cb_SideChainVolume.setText("(MV) Volume");
        cb_SideChainVolume.setMaximumSize(new java.awt.Dimension(245, 25));
        cb_SideChainVolume.setMinimumSize(new java.awt.Dimension(245, 25));
        cb_SideChainVolume.setPreferredSize(new java.awt.Dimension(245, 25));
        cb_SideChainVolume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_SideChainVolumeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel20.add(cb_SideChainVolume, gridBagConstraints);

        cb_z1.setText("(Z1) Z1-scale");
        cb_z1.setMaximumSize(new java.awt.Dimension(245, 25));
        cb_z1.setMinimumSize(new java.awt.Dimension(245, 25));
        cb_z1.setPreferredSize(new java.awt.Dimension(245, 25));
        cb_z1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_z1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel20.add(cb_z1, gridBagConstraints);

        cb_eci.setText("(ECI) Atomic charge");
        cb_eci.setMaximumSize(new java.awt.Dimension(245, 25));
        cb_eci.setMinimumSize(new java.awt.Dimension(245, 25));
        cb_eci.setPreferredSize(new java.awt.Dimension(245, 25));
        cb_eci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_eciActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel20.add(cb_eci, gridBagConstraints);

        cb_hws.setText("(HWS) Hoop-Woods hydropathy index");
        cb_hws.setMaximumSize(new java.awt.Dimension(270, 25));
        cb_hws.setMinimumSize(new java.awt.Dimension(270, 25));
        cb_hws.setPreferredSize(new java.awt.Dimension(270, 25));
        cb_hws.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_hwsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel20.add(cb_hws, gridBagConstraints);

        cb_kds.setText("(KDS) Kyte-Doolittle hydropathy index ");
        cb_kds.setMaximumSize(new java.awt.Dimension(270, 25));
        cb_kds.setMinimumSize(new java.awt.Dimension(270, 25));
        cb_kds.setPreferredSize(new java.awt.Dimension(270, 25));
        cb_kds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_kdsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel20.add(cb_kds, gridBagConstraints);

        cb_pie.setText("(PIE) Isoelectric point ");
        cb_pie.setMaximumSize(new java.awt.Dimension(270, 25));
        cb_pie.setMinimumSize(new java.awt.Dimension(270, 25));
        cb_pie.setPreferredSize(new java.awt.Dimension(270, 25));
        cb_pie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_pieActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel20.add(cb_pie, gridBagConstraints);

        cb_isa.setText("(ISA) Isotropic surface area");
        cb_isa.setMaximumSize(new java.awt.Dimension(245, 25));
        cb_isa.setMinimumSize(new java.awt.Dimension(245, 25));
        cb_isa.setPreferredSize(new java.awt.Dimension(245, 25));
        cb_isa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_isaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        jPanel20.add(cb_isa, gridBagConstraints);

        cb_pbs.setText("(PBS) Relative  β-sheet frequency");
        cb_pbs.setMaximumSize(new java.awt.Dimension(270, 25));
        cb_pbs.setMinimumSize(new java.awt.Dimension(270, 25));
        cb_pbs.setPreferredSize(new java.awt.Dimension(270, 25));
        cb_pbs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_pbsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel20.add(cb_pbs, gridBagConstraints);

        cb_pah.setText("(PAH) Relative α-helix frequency");
        cb_pah.setMaximumSize(new java.awt.Dimension(270, 25));
        cb_pah.setMinimumSize(new java.awt.Dimension(270, 25));
        cb_pah.setPreferredSize(new java.awt.Dimension(270, 25));
        cb_pah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_pahActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel20.add(cb_pah, gridBagConstraints);

        cb_z2.setText("(Z2) Z2-scale");
        cb_z2.setMaximumSize(new java.awt.Dimension(245, 25));
        cb_z2.setMinimumSize(new java.awt.Dimension(245, 25));
        cb_z2.setPreferredSize(new java.awt.Dimension(245, 25));
        cb_z2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_z2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel20.add(cb_z2, gridBagConstraints);

        cb_z3.setText("(Z3) Z3-scale");
        cb_z3.setMaximumSize(new java.awt.Dimension(245, 25));
        cb_z3.setMinimumSize(new java.awt.Dimension(245, 25));
        cb_z3.setPreferredSize(new java.awt.Dimension(245, 25));
        cb_z3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_z3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        jPanel20.add(cb_z3, gridBagConstraints);

        cb_ptt.setText("(PTT) Relative reverse-turn frequency");
        cb_ptt.setMaximumSize(new java.awt.Dimension(270, 25));
        cb_ptt.setMinimumSize(new java.awt.Dimension(270, 25));
        cb_ptt.setPreferredSize(new java.awt.Dimension(270, 25));
        cb_ptt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_pttActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel20.add(cb_ptt, gridBagConstraints);

        cb_eps.setText("(EPS) Heat of formation");
        cb_eps.setMaximumSize(new java.awt.Dimension(270, 25));
        cb_eps.setMinimumSize(new java.awt.Dimension(270, 25));
        cb_eps.setPreferredSize(new java.awt.Dimension(270, 25));
        cb_eps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_epsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel20.add(cb_eps, gridBagConstraints);

        cb_gcp1.setText("(GCP1) Compatibility parameter-1");
        cb_gcp1.setMaximumSize(new java.awt.Dimension(270, 25));
        cb_gcp1.setMinimumSize(new java.awt.Dimension(270, 25));
        cb_gcp1.setPreferredSize(new java.awt.Dimension(270, 25));
        cb_gcp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_gcp1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        jPanel20.add(cb_gcp1, gridBagConstraints);

        cb_gcp2.setText("(GCP2) Compatibility parameter-2");
        cb_gcp2.setMaximumSize(new java.awt.Dimension(270, 25));
        cb_gcp2.setMinimumSize(new java.awt.Dimension(270, 25));
        cb_gcp2.setPreferredSize(new java.awt.Dimension(270, 25));
        cb_gcp2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_gcp2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel20.add(cb_gcp2, gridBagConstraints);

        aminoAcidPropertiesPanel.add(jPanel20, new java.awt.GridBagConstraints());

        propertiesTabbedPane.addTab("Chemical-Physical", aminoAcidPropertiesPanel);

        aminoAcidPropertiesPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel21.setMaximumSize(new java.awt.Dimension(510, 220));
        jPanel21.setMinimumSize(new java.awt.Dimension(510, 220));
        jPanel21.setPreferredSize(new java.awt.Dimension(510, 220));
        jPanel21.setLayout(new java.awt.GridBagLayout());

        cb_vhse1.setText("(VHSE1) VHSE1");
        cb_vhse1.setMaximumSize(new java.awt.Dimension(245, 25));
        cb_vhse1.setMinimumSize(new java.awt.Dimension(245, 25));
        cb_vhse1.setPreferredSize(new java.awt.Dimension(245, 25));
        cb_vhse1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_vhse1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel21.add(cb_vhse1, gridBagConstraints);

        cb_vhse4.setText("(VHSE4) VHSE4");
        cb_vhse4.setMaximumSize(new java.awt.Dimension(245, 25));
        cb_vhse4.setMinimumSize(new java.awt.Dimension(245, 25));
        cb_vhse4.setPreferredSize(new java.awt.Dimension(245, 25));
        cb_vhse4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_vhse4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel21.add(cb_vhse4, gridBagConstraints);

        cb_vhse6.setText("(VHSE6) VHSE6");
        cb_vhse6.setMaximumSize(new java.awt.Dimension(245, 25));
        cb_vhse6.setMinimumSize(new java.awt.Dimension(245, 25));
        cb_vhse6.setPreferredSize(new java.awt.Dimension(245, 25));
        cb_vhse6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_vhse6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel21.add(cb_vhse6, gridBagConstraints);

        cb_t2.setText("(T2) T-scale 2");
        cb_t2.setMaximumSize(new java.awt.Dimension(245, 25));
        cb_t2.setMinimumSize(new java.awt.Dimension(245, 25));
        cb_t2.setPreferredSize(new java.awt.Dimension(245, 25));
        cb_t2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_t2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel21.add(cb_t2, gridBagConstraints);

        cb_t4.setText("(T4) T-scale 4");
        cb_t4.setMaximumSize(new java.awt.Dimension(270, 25));
        cb_t4.setMinimumSize(new java.awt.Dimension(270, 25));
        cb_t4.setPreferredSize(new java.awt.Dimension(270, 25));
        cb_t4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_t4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel21.add(cb_t4, gridBagConstraints);

        cb_t3.setText("(T3) T-scale 3");
        cb_t3.setMaximumSize(new java.awt.Dimension(245, 25));
        cb_t3.setMinimumSize(new java.awt.Dimension(245, 25));
        cb_t3.setPreferredSize(new java.awt.Dimension(245, 25));
        cb_t3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_t3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        jPanel21.add(cb_t3, gridBagConstraints);

        cb_vhse7.setText("(VHSE7) VHSE7");
        cb_vhse7.setMaximumSize(new java.awt.Dimension(245, 25));
        cb_vhse7.setMinimumSize(new java.awt.Dimension(245, 25));
        cb_vhse7.setPreferredSize(new java.awt.Dimension(245, 25));
        cb_vhse7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_vhse7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel21.add(cb_vhse7, gridBagConstraints);

        cb_vhse8.setText("(VHSE8) VHSE8");
        cb_vhse8.setMaximumSize(new java.awt.Dimension(245, 25));
        cb_vhse8.setMinimumSize(new java.awt.Dimension(245, 25));
        cb_vhse8.setPreferredSize(new java.awt.Dimension(245, 25));
        cb_vhse8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_vhse8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        jPanel21.add(cb_vhse8, gridBagConstraints);

        jLabel3.setMaximumSize(new java.awt.Dimension(34, 60));
        jLabel3.setMinimumSize(new java.awt.Dimension(34, 60));
        jLabel3.setPreferredSize(new java.awt.Dimension(34, 60));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        jPanel21.add(jLabel3, gridBagConstraints);

        aminoAcidPropertiesPanel1.add(jPanel21, new java.awt.GridBagConstraints());

        jPanel22.setMaximumSize(new java.awt.Dimension(100, 30));
        jPanel22.setMinimumSize(new java.awt.Dimension(100, 30));
        jPanel22.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel22.setRequestFocusEnabled(false);
        jPanel22.setLayout(new java.awt.GridBagLayout());

        aminoAcidPropertyToggleButton1.setText("Check");
        aminoAcidPropertyToggleButton1.setMaximumSize(new java.awt.Dimension(95, 27));
        aminoAcidPropertyToggleButton1.setMinimumSize(new java.awt.Dimension(95, 27));
        aminoAcidPropertyToggleButton1.setPreferredSize(new java.awt.Dimension(95, 27));
        aminoAcidPropertyToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aminoAcidPropertyToggleButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel22.add(aminoAcidPropertyToggleButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        aminoAcidPropertiesPanel1.add(jPanel22, gridBagConstraints);

        propertiesTabbedPane.addTab("HSE and Topological Scales", aminoAcidPropertiesPanel1);

        mdlovisPanel.setLayout(new java.awt.GridBagLayout());

        jPanel25.setMaximumSize(new java.awt.Dimension(510, 220));
        jPanel25.setMinimumSize(new java.awt.Dimension(510, 220));
        jPanel25.setPreferredSize(new java.awt.Dimension(510, 220));
        jPanel25.setLayout(new java.awt.GridBagLayout());

        cb_mdl1.setText("MDL1");
        cb_mdl1.setMaximumSize(new java.awt.Dimension(270, 25));
        cb_mdl1.setMinimumSize(new java.awt.Dimension(270, 25));
        cb_mdl1.setPreferredSize(new java.awt.Dimension(270, 25));
        cb_mdl1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_mdl1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel25.add(cb_mdl1, gridBagConstraints);

        cb_mdl2.setText("MDL2");
        cb_mdl2.setMaximumSize(new java.awt.Dimension(270, 25));
        cb_mdl2.setMinimumSize(new java.awt.Dimension(270, 25));
        cb_mdl2.setPreferredSize(new java.awt.Dimension(270, 25));
        cb_mdl2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_mdl2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel25.add(cb_mdl2, gridBagConstraints);

        cb_mdl3.setText("MDL3");
        cb_mdl3.setMaximumSize(new java.awt.Dimension(270, 25));
        cb_mdl3.setMinimumSize(new java.awt.Dimension(270, 25));
        cb_mdl3.setPreferredSize(new java.awt.Dimension(270, 25));
        cb_mdl3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_mdl3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel25.add(cb_mdl3, gridBagConstraints);

        cb_mdl4.setText("MDL4");
        cb_mdl4.setMaximumSize(new java.awt.Dimension(270, 25));
        cb_mdl4.setMinimumSize(new java.awt.Dimension(270, 25));
        cb_mdl4.setPreferredSize(new java.awt.Dimension(270, 25));
        cb_mdl4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_mdl4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel25.add(cb_mdl4, gridBagConstraints);

        cb_mdl5.setText("MDL5");
        cb_mdl5.setMaximumSize(new java.awt.Dimension(270, 25));
        cb_mdl5.setMinimumSize(new java.awt.Dimension(270, 25));
        cb_mdl5.setPreferredSize(new java.awt.Dimension(270, 25));
        cb_mdl5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_mdl5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel25.add(cb_mdl5, gridBagConstraints);

        cb_mdl6.setText("MDL6");
        cb_mdl6.setMaximumSize(new java.awt.Dimension(270, 25));
        cb_mdl6.setMinimumSize(new java.awt.Dimension(270, 25));
        cb_mdl6.setPreferredSize(new java.awt.Dimension(270, 25));
        cb_mdl6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_mdl6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel25.add(cb_mdl6, gridBagConstraints);

        jLabel2.setMaximumSize(new java.awt.Dimension(240, 25));
        jLabel2.setMinimumSize(new java.awt.Dimension(240, 25));
        jLabel2.setPreferredSize(new java.awt.Dimension(240, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel25.add(jLabel2, gridBagConstraints);

        jLabel4.setPreferredSize(new java.awt.Dimension(34, 45));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        jPanel25.add(jLabel4, gridBagConstraints);

        mdlovisPanel.add(jPanel25, new java.awt.GridBagConstraints());

        jPanel26.setMaximumSize(new java.awt.Dimension(100, 30));
        jPanel26.setMinimumSize(new java.awt.Dimension(100, 30));
        jPanel26.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel26.setRequestFocusEnabled(false);
        jPanel26.setLayout(new java.awt.GridBagLayout());

        mdlovisToggleButton.setText("Check");
        mdlovisToggleButton.setMaximumSize(new java.awt.Dimension(95, 27));
        mdlovisToggleButton.setMinimumSize(new java.awt.Dimension(95, 27));
        mdlovisToggleButton.setPreferredSize(new java.awt.Dimension(95, 27));
        mdlovisToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mdlovisToggleButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel26.add(mdlovisToggleButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        mdlovisPanel.add(jPanel26, gridBagConstraints);

        propertiesTabbedPane.addTab("MD-LOVIS", mdlovisPanel);

        qubilsmidasPanel.setLayout(new java.awt.GridBagLayout());

        jPanel23.setMaximumSize(new java.awt.Dimension(510, 220));
        jPanel23.setMinimumSize(new java.awt.Dimension(510, 220));
        jPanel23.setPreferredSize(new java.awt.Dimension(510, 220));
        jPanel23.setLayout(new java.awt.GridBagLayout());

        cb_mid1.setText("(MID1) MID1");
        cb_mid1.setMaximumSize(new java.awt.Dimension(250, 25));
        cb_mid1.setMinimumSize(new java.awt.Dimension(250, 25));
        cb_mid1.setPreferredSize(new java.awt.Dimension(250, 25));
        cb_mid1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_mid1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel23.add(cb_mid1, gridBagConstraints);

        cb_mid2.setText("(MID2) MID2");
        cb_mid2.setMaximumSize(new java.awt.Dimension(250, 25));
        cb_mid2.setMinimumSize(new java.awt.Dimension(250, 25));
        cb_mid2.setPreferredSize(new java.awt.Dimension(250, 25));
        cb_mid2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_mid2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel23.add(cb_mid2, gridBagConstraints);

        cb_mid3.setText("(MID3) MID3");
        cb_mid3.setMaximumSize(new java.awt.Dimension(250, 25));
        cb_mid3.setMinimumSize(new java.awt.Dimension(250, 25));
        cb_mid3.setPreferredSize(new java.awt.Dimension(250, 25));
        cb_mid3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_mid3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel23.add(cb_mid3, gridBagConstraints);

        cb_mid6.setText("(MID6) MID6");
        cb_mid6.setMaximumSize(new java.awt.Dimension(250, 25));
        cb_mid6.setMinimumSize(new java.awt.Dimension(250, 25));
        cb_mid6.setPreferredSize(new java.awt.Dimension(250, 25));
        cb_mid6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_mid6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel23.add(cb_mid6, gridBagConstraints);

        cb_mid8.setText("(MID8) MID8");
        cb_mid8.setMaximumSize(new java.awt.Dimension(260, 25));
        cb_mid8.setMinimumSize(new java.awt.Dimension(260, 25));
        cb_mid8.setPreferredSize(new java.awt.Dimension(260, 25));
        cb_mid8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_mid8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel23.add(cb_mid8, gridBagConstraints);

        cb_mid7.setText("(MID7) MID7");
        cb_mid7.setMaximumSize(new java.awt.Dimension(260, 25));
        cb_mid7.setMinimumSize(new java.awt.Dimension(260, 25));
        cb_mid7.setPreferredSize(new java.awt.Dimension(260, 25));
        cb_mid7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_mid7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel23.add(cb_mid7, gridBagConstraints);

        cb_mid4.setText("(MID4) MID4");
        cb_mid4.setMaximumSize(new java.awt.Dimension(250, 25));
        cb_mid4.setMinimumSize(new java.awt.Dimension(250, 25));
        cb_mid4.setPreferredSize(new java.awt.Dimension(250, 25));
        cb_mid4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_mid4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel23.add(cb_mid4, gridBagConstraints);

        cb_mid5.setText("(MID5) MID5");
        cb_mid5.setMaximumSize(new java.awt.Dimension(250, 25));
        cb_mid5.setMinimumSize(new java.awt.Dimension(250, 25));
        cb_mid5.setPreferredSize(new java.awt.Dimension(250, 25));
        cb_mid5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_mid5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.ABOVE_BASELINE_LEADING;
        jPanel23.add(cb_mid5, gridBagConstraints);

        cb_mid9.setText("(MID9) MID9");
        cb_mid9.setMaximumSize(new java.awt.Dimension(260, 25));
        cb_mid9.setMinimumSize(new java.awt.Dimension(260, 25));
        cb_mid9.setPreferredSize(new java.awt.Dimension(260, 25));
        cb_mid9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_mid9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel23.add(cb_mid9, gridBagConstraints);

        jLabel1.setMaximumSize(new java.awt.Dimension(34, 50));
        jLabel1.setMinimumSize(new java.awt.Dimension(34, 50));
        jLabel1.setPreferredSize(new java.awt.Dimension(34, 75));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        jPanel23.add(jLabel1, gridBagConstraints);

        qubilsmidasPanel.add(jPanel23, new java.awt.GridBagConstraints());

        jPanel24.setMaximumSize(new java.awt.Dimension(100, 30));
        jPanel24.setMinimumSize(new java.awt.Dimension(100, 30));
        jPanel24.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel24.setRequestFocusEnabled(false);
        jPanel24.setLayout(new java.awt.GridBagLayout());

        qubilsmidasToggleButton.setText("Check");
        qubilsmidasToggleButton.setMaximumSize(new java.awt.Dimension(95, 27));
        qubilsmidasToggleButton.setMinimumSize(new java.awt.Dimension(95, 27));
        qubilsmidasToggleButton.setPreferredSize(new java.awt.Dimension(95, 27));
        qubilsmidasToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qubilsmidasToggleButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel24.add(qubilsmidasToggleButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        qubilsmidasPanel.add(jPanel24, gridBagConstraints);

        propertiesTabbedPane.addTab("QuBiLS-MIDAS", qubilsmidasPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(propertiesTabbedPane, gridBagConstraints);

        jPanel16.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel16.setMaximumSize(new java.awt.Dimension(530, 30));
        jPanel16.setMinimumSize(new java.awt.Dimension(530, 30));
        jPanel16.setName(""); // NOI18N
        jPanel16.setPreferredSize(new java.awt.Dimension(530, 30));
        jPanel16.setLayout(new java.awt.GridBagLayout());

        b_check_all.setText("Check All");
        b_check_all.setMaximumSize(new java.awt.Dimension(115, 27));
        b_check_all.setMinimumSize(new java.awt.Dimension(115, 27));
        b_check_all.setPreferredSize(new java.awt.Dimension(115, 27));
        b_check_all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_check_allActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel16.add(b_check_all, gridBagConstraints);

        b_uncheck_all.setText("Uncheck All");
        b_uncheck_all.setMaximumSize(new java.awt.Dimension(115, 27));
        b_uncheck_all.setMinimumSize(new java.awt.Dimension(115, 27));
        b_uncheck_all.setPreferredSize(new java.awt.Dimension(115, 27));
        b_uncheck_all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_uncheck_allActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        jPanel16.add(b_uncheck_all, gridBagConstraints);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tomocomd/camps/mdlais/gui/data/panelhelp.png"))); // NOI18N
        jButton1.setBorder(null);
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.setMaximumSize(new java.awt.Dimension(175, 27));
        jButton1.setMinimumSize(new java.awt.Dimension(175, 27));
        jButton1.setPreferredSize(new java.awt.Dimension(175, 27));
        jButton1.addActionListener( Util.openFile( this, "Properties.pdf" ) );
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel16.add(jButton1, gridBagConstraints);

        b_ok.setText("Ok");
        b_ok.setMaximumSize(new java.awt.Dimension(115, 27));
        b_ok.setMinimumSize(new java.awt.Dimension(115, 27));
        b_ok.setPreferredSize(new java.awt.Dimension(115, 27));
        b_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_okActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 1, 0, 1);
        jPanel16.add(b_ok, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        getContentPane().add(jPanel16, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void b_check_allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_check_allActionPerformed

        currentAminoacidPropertiesTab0 = TOTAL_UNIT_PROPERTIES;
        currentAminoacidPropertiesTab1 = TOTAL_AMINOACID_PROPERTIESTAB1;
        currentAminoacidPropertiesTab2 = TOTAL_AMINOACID_PROPERTIESTAB2;
        currentMDLOVIsProperties = TOTAL_AMINOACID_PROPERTIES_MDLOVISTAB;
        currentQuBilsMIDASProperties = TOTAL_AMINOACID_PROPERTIES_QUBILSMIDASTAB;
        selectAllAminoAcidPropertiesTab0();
        selectAllAminoAcidPropertiesTab1();
        selectAllAminoAcidPropertiesTab2();
        selectAllAminoAcidPropertiesMDLOVISTab();
        selectAllAminoAcidPropertiesQubilsMIDASTab();
        unitPropertyToggleButton.setSelected(true);
        unitPropertyToggleButton.setText("Uncheck");        
        aminoAcidPropertyToggleButton.setSelected(true);
        aminoAcidPropertyToggleButton.setText("Uncheck");
        aminoAcidPropertyToggleButton1.setSelected(true);
        aminoAcidPropertyToggleButton1.setText("Uncheck");
        mdlovisToggleButton.setSelected(true);
        mdlovisToggleButton.setText("Uncheck");
        qubilsmidasToggleButton.setSelected(true);
        qubilsmidasToggleButton.setText("Uncheck");
    }//GEN-LAST:event_b_check_allActionPerformed

    private void b_uncheck_allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_uncheck_allActionPerformed

        currentAminoacidPropertiesTab0 = 0;
        currentAminoacidPropertiesTab1 = 0;
        currentAminoacidPropertiesTab2 = 0;
        currentMDLOVIsProperties = 0;
        currentQuBilsMIDASProperties = 0;
        unselectAllAminoAcidPropertiesTab0();
        unselectAllAminoAcidPropertiesTab1();
        unselectAllAminoAcidPropertiesTab2();
        unselectAllAminoAcidQubilsMIDASTab();
        unselectAllAminoAcidMDLOVISTab();        
        unitPropertyToggleButton.setSelected(false);
        unitPropertyToggleButton.setText("Check");        
        aminoAcidPropertyToggleButton.setSelected(false);
        aminoAcidPropertyToggleButton.setText("Check");
        aminoAcidPropertyToggleButton1.setSelected(false);
        aminoAcidPropertyToggleButton1.setText("Check");
        mdlovisToggleButton.setSelected(false);
        mdlovisToggleButton.setText("Check");
        qubilsmidasToggleButton.setSelected(false);
        qubilsmidasToggleButton.setText("Check");
    }//GEN-LAST:event_b_uncheck_allActionPerformed

    private void b_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_okActionPerformed

        // </editor-fold>
        list_AminoacidProperties.clear();

        // <editor-fold defaultstate="collapsed" desc="Aminoacid Properties">
        if (cb_AminoAcidMass.isSelected()) {
            list_AminoacidProperties.add("side_chain_mass");
        }
        if (cb_SideChainVolume.isSelected()) {
            list_AminoacidProperties.add("side_chain_volume");
        }
        if (cb_z1.isSelected()) {
            list_AminoacidProperties.add("z1");
        }
        if (cb_z2.isSelected()) {
            list_AminoacidProperties.add("z2");
        }
        if (cb_z3.isSelected()) {
            list_AminoacidProperties.add("z3");
        }
        if (cb_eci.isSelected()) {
            list_AminoacidProperties.add("eci");
        }

        if (cb_isa.isSelected()) {
            list_AminoacidProperties.add("isa");
        }
        if (cb_hws.isSelected()) {
            list_AminoacidProperties.add("hws");
        }
        if (cb_kds.isSelected()) {
            list_AminoacidProperties.add("kds");
        }
        if (cb_pie.isSelected()) {
            list_AminoacidProperties.add("pie");
        }
        if (cb_pah.isSelected()) {
            list_AminoacidProperties.add("pah");
        }
        if (cb_pbs.isSelected()) {
            list_AminoacidProperties.add("pbs");
        }

        if (cb_ptt.isSelected()) {
            list_AminoacidProperties.add("ptt");
        }

        if (cb_gcp1.isSelected()) {
            list_AminoacidProperties.add("gcp1");
        }

        if (cb_gcp2.isSelected()) {
            list_AminoacidProperties.add("gcp2");
        }

        if (cb_eps.isSelected()) {
            list_AminoacidProperties.add("eps");
        }

        if (cb_unit.isSelected()) {
            list_AminoacidProperties.add("unit");
        }

        if (cb_t2.isSelected()) {
            list_AminoacidProperties.add("t2");
        }
        if (cb_t3.isSelected()) {
            list_AminoacidProperties.add("t3");
        }
        if (cb_t4.isSelected()) {
            list_AminoacidProperties.add("t4");
        }
        if (cb_vhse1.isSelected()) {
            list_AminoacidProperties.add("vhse1");
        }
        if (cb_vhse4.isSelected()) {
            list_AminoacidProperties.add("vhse4");
        }
        if (cb_vhse6.isSelected()) {
            list_AminoacidProperties.add("vhse6");
        }
        if (cb_vhse7.isSelected()) {
            list_AminoacidProperties.add("vhse7");
        }
        if (cb_vhse8.isSelected()) {
            list_AminoacidProperties.add("vhse8");
        }

        if (cb_mdl1.isSelected()) {
            list_AminoacidProperties.add("mdl1");
        }
        if (cb_mdl2.isSelected()) {
            list_AminoacidProperties.add("mdl2");
        }
        if (cb_mdl3.isSelected()) {
            list_AminoacidProperties.add("mdl3");
        }
        if (cb_mdl4.isSelected()) {
            list_AminoacidProperties.add("mdl4");
        }
        if (cb_mdl5.isSelected()) {
            list_AminoacidProperties.add("mdl5");
        }
        if (cb_mdl6.isSelected()) {
            list_AminoacidProperties.add("mdl6");
        }

        if (cb_mid1.isSelected()) {
            list_AminoacidProperties.add("mid1");
        }
        if (cb_mid2.isSelected()) {
            list_AminoacidProperties.add("mid2");
        }
        if (cb_mid3.isSelected()) {
            list_AminoacidProperties.add("mid3");
        }
        if (cb_mid4.isSelected()) {
            list_AminoacidProperties.add("mid4");
        }
        if (cb_mid5.isSelected()) {
            list_AminoacidProperties.add("mid5");
        }
        if (cb_mid6.isSelected()) {
            list_AminoacidProperties.add("mid6");
        }
        if (cb_mid7.isSelected()) {
            list_AminoacidProperties.add("mid7");
        }
        if (cb_mid8.isSelected()) {
            list_AminoacidProperties.add("mid8");
        }
        if (cb_mid9.isSelected()) {
            list_AminoacidProperties.add("mid9");
        }

        // </editor-fold>
        setVisible(false);
    }//GEN-LAST:event_b_okActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void qubilsmidasToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qubilsmidasToggleButtonActionPerformed
        if (qubilsmidasToggleButton.isSelected()) {
            currentQuBilsMIDASProperties = TOTAL_AMINOACID_PROPERTIES_QUBILSMIDASTAB;

            selectAllAminoAcidPropertiesQubilsMIDASTab();

            qubilsmidasToggleButton.setText("Uncheck");
        } else {
            currentQuBilsMIDASProperties = 0;

            unselectAllAminoAcidQubilsMIDASTab();

            qubilsmidasToggleButton.setText("Check");
        }
    }//GEN-LAST:event_qubilsmidasToggleButtonActionPerformed

    private void cb_mid9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_mid9ActionPerformed
        actionAminoAcidPropertiesQuBilsMIDASTab(cb_mid9);
    }//GEN-LAST:event_cb_mid9ActionPerformed

    private void cb_mid5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_mid5ActionPerformed
        actionAminoAcidPropertiesQuBilsMIDASTab(cb_mid5);
    }//GEN-LAST:event_cb_mid5ActionPerformed

    private void cb_mid4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_mid4ActionPerformed
        actionAminoAcidPropertiesQuBilsMIDASTab(cb_mid4);
    }//GEN-LAST:event_cb_mid4ActionPerformed

    private void cb_mid7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_mid7ActionPerformed
        actionAminoAcidPropertiesQuBilsMIDASTab(cb_mid7);
    }//GEN-LAST:event_cb_mid7ActionPerformed

    private void cb_mid8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_mid8ActionPerformed
        actionAminoAcidPropertiesQuBilsMIDASTab(cb_mid8);
    }//GEN-LAST:event_cb_mid8ActionPerformed

    private void cb_mid6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_mid6ActionPerformed
        actionAminoAcidPropertiesQuBilsMIDASTab(cb_mid6);
    }//GEN-LAST:event_cb_mid6ActionPerformed

    private void cb_mid3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_mid3ActionPerformed
        actionAminoAcidPropertiesQuBilsMIDASTab(cb_mid3);
    }//GEN-LAST:event_cb_mid3ActionPerformed

    private void cb_mid2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_mid2ActionPerformed
        actionAminoAcidPropertiesQuBilsMIDASTab(cb_mid2);
    }//GEN-LAST:event_cb_mid2ActionPerformed

    private void cb_mid1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_mid1ActionPerformed
        actionAminoAcidPropertiesQuBilsMIDASTab(cb_mid1);
    }//GEN-LAST:event_cb_mid1ActionPerformed

    private void mdlovisToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mdlovisToggleButtonActionPerformed
        if (mdlovisToggleButton.isSelected()) {
            currentMDLOVIsProperties = TOTAL_AMINOACID_PROPERTIES_MDLOVISTAB;

            selectAllAminoAcidPropertiesMDLOVISTab();

            mdlovisToggleButton.setText("Uncheck");
        } else {
            currentMDLOVIsProperties = 0;

            unselectAllAminoAcidMDLOVISTab();

            mdlovisToggleButton.setText("Check");
        }
    }//GEN-LAST:event_mdlovisToggleButtonActionPerformed

    private void cb_mdl6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_mdl6ActionPerformed
        actionAminoAcidPropertiesMDLOVISTab(cb_mdl6);
    }//GEN-LAST:event_cb_mdl6ActionPerformed

    private void cb_mdl5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_mdl5ActionPerformed
        actionAminoAcidPropertiesMDLOVISTab(cb_mdl5);
    }//GEN-LAST:event_cb_mdl5ActionPerformed

    private void cb_mdl4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_mdl4ActionPerformed
        actionAminoAcidPropertiesMDLOVISTab(cb_mdl4);
    }//GEN-LAST:event_cb_mdl4ActionPerformed

    private void cb_mdl3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_mdl3ActionPerformed
        actionAminoAcidPropertiesMDLOVISTab(cb_mdl3);
    }//GEN-LAST:event_cb_mdl3ActionPerformed

    private void cb_mdl2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_mdl2ActionPerformed
        actionAminoAcidPropertiesMDLOVISTab(cb_mdl2);
    }//GEN-LAST:event_cb_mdl2ActionPerformed

    private void cb_mdl1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_mdl1ActionPerformed
        actionAminoAcidPropertiesMDLOVISTab(cb_mdl1);
    }//GEN-LAST:event_cb_mdl1ActionPerformed

    private void aminoAcidPropertyToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aminoAcidPropertyToggleButton1ActionPerformed
        if (aminoAcidPropertyToggleButton1.isSelected()) {
            currentAminoacidPropertiesTab2 = TOTAL_AMINOACID_PROPERTIESTAB2;

            selectAllAminoAcidPropertiesTab2();

            aminoAcidPropertyToggleButton1.setText("Uncheck");
        } else {
            currentAminoacidPropertiesTab2 = 0;

            unselectAllAminoAcidPropertiesTab2();

            aminoAcidPropertyToggleButton1.setText("Check");
        }
    }//GEN-LAST:event_aminoAcidPropertyToggleButton1ActionPerformed

    private void cb_vhse8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_vhse8ActionPerformed
        actionAminoAcidPropertiesTab2(cb_vhse8);
    }//GEN-LAST:event_cb_vhse8ActionPerformed

    private void cb_vhse7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_vhse7ActionPerformed
        actionAminoAcidPropertiesTab2(cb_vhse7);
    }//GEN-LAST:event_cb_vhse7ActionPerformed

    private void cb_t3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_t3ActionPerformed
        actionAminoAcidPropertiesTab2(cb_t3);
    }//GEN-LAST:event_cb_t3ActionPerformed

    private void cb_t4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_t4ActionPerformed
        actionAminoAcidPropertiesTab2(cb_t4);
    }//GEN-LAST:event_cb_t4ActionPerformed

    private void cb_t2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_t2ActionPerformed
        actionAminoAcidPropertiesTab2(cb_t2);
    }//GEN-LAST:event_cb_t2ActionPerformed

    private void cb_vhse6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_vhse6ActionPerformed
        actionAminoAcidPropertiesTab2(cb_vhse6);
    }//GEN-LAST:event_cb_vhse6ActionPerformed

    private void cb_vhse4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_vhse4ActionPerformed
        actionAminoAcidPropertiesTab2(cb_vhse4);
    }//GEN-LAST:event_cb_vhse4ActionPerformed

    private void cb_vhse1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_vhse1ActionPerformed
        actionAminoAcidPropertiesTab2(cb_vhse1);
    }//GEN-LAST:event_cb_vhse1ActionPerformed

    private void cb_gcp2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_gcp2ActionPerformed
        actionAminoAcidPropertiesTab1(cb_gcp2);
    }//GEN-LAST:event_cb_gcp2ActionPerformed

    private void cb_gcp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_gcp1ActionPerformed
        actionAminoAcidPropertiesTab1(cb_gcp1);
    }//GEN-LAST:event_cb_gcp1ActionPerformed

    private void cb_epsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_epsActionPerformed
        actionAminoAcidPropertiesTab1(cb_eps);
    }//GEN-LAST:event_cb_epsActionPerformed

    private void cb_pttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_pttActionPerformed
        actionAminoAcidPropertiesTab1(cb_ptt);
    }//GEN-LAST:event_cb_pttActionPerformed

    private void cb_z3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_z3ActionPerformed
        actionAminoAcidPropertiesTab1(cb_z3);
    }//GEN-LAST:event_cb_z3ActionPerformed

    private void cb_z2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_z2ActionPerformed
        actionAminoAcidPropertiesTab1(cb_z2);
    }//GEN-LAST:event_cb_z2ActionPerformed

    private void cb_pahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_pahActionPerformed
        actionAminoAcidPropertiesTab1(cb_pah);
    }//GEN-LAST:event_cb_pahActionPerformed

    private void cb_pbsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_pbsActionPerformed
        actionAminoAcidPropertiesTab1(cb_pbs);
    }//GEN-LAST:event_cb_pbsActionPerformed

    private void cb_isaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_isaActionPerformed
        actionAminoAcidPropertiesTab1(cb_isa);
    }//GEN-LAST:event_cb_isaActionPerformed

    private void cb_pieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_pieActionPerformed
        actionAminoAcidPropertiesTab1(cb_pie);
    }//GEN-LAST:event_cb_pieActionPerformed

    private void cb_kdsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_kdsActionPerformed
        actionAminoAcidPropertiesTab1(cb_kds);
    }//GEN-LAST:event_cb_kdsActionPerformed

    private void cb_hwsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_hwsActionPerformed
        actionAminoAcidPropertiesTab1(cb_hws);
    }//GEN-LAST:event_cb_hwsActionPerformed

    private void cb_eciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_eciActionPerformed
        actionAminoAcidPropertiesTab1(cb_eci);
    }//GEN-LAST:event_cb_eciActionPerformed

    private void cb_z1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_z1ActionPerformed
        actionAminoAcidPropertiesTab1(cb_z1);
    }//GEN-LAST:event_cb_z1ActionPerformed

    private void cb_SideChainVolumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_SideChainVolumeActionPerformed
        actionAminoAcidPropertiesTab1(cb_SideChainVolume);
    }//GEN-LAST:event_cb_SideChainVolumeActionPerformed

    private void cb_AminoAcidMassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_AminoAcidMassActionPerformed
        actionAminoAcidPropertiesTab1(cb_AminoAcidMass);
    }//GEN-LAST:event_cb_AminoAcidMassActionPerformed

    private void aminoAcidPropertyToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aminoAcidPropertyToggleButtonActionPerformed

        if (aminoAcidPropertyToggleButton.isSelected()) {
            currentAminoacidPropertiesTab1 = TOTAL_AMINOACID_PROPERTIESTAB1;

            selectAllAminoAcidPropertiesTab1();

            aminoAcidPropertyToggleButton.setText("Uncheck");
        } else {
            currentAminoacidPropertiesTab1 = 0;

            unselectAllAminoAcidPropertiesTab1();

            aminoAcidPropertyToggleButton.setText("Check");
        }
    }//GEN-LAST:event_aminoAcidPropertyToggleButtonActionPerformed

    private void unitPropertyToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitPropertyToggleButtonActionPerformed
       if (unitPropertyToggleButton.isSelected()) {
            currentAminoacidPropertiesTab0 = TOTAL_UNIT_PROPERTIES;

            selectAllAminoAcidPropertiesTab0();

            unitPropertyToggleButton.setText("Uncheck");
        } else {
            currentAminoacidPropertiesTab0 = 0;

            unselectAllAminoAcidPropertiesTab0();

            unitPropertyToggleButton.setText("Check");
        } 
    }//GEN-LAST:event_unitPropertyToggleButtonActionPerformed

    private void cb_unitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_unitActionPerformed
        actionAminoAcidPropertiesTab0(cb_unit);
    }//GEN-LAST:event_cb_unitActionPerformed

    private void selectAllAminoAcidPropertiesTab0() 
    {
     cb_unit.setSelected(true);
    }
    
    private void selectAllAminoAcidPropertiesTab1() {
        cb_AminoAcidMass.setSelected(true);
        cb_SideChainVolume.setSelected(true);
        cb_z1.setSelected(true);
        cb_z2.setSelected(true);
        cb_z3.setSelected(true);
        cb_isa.setSelected(true);
        cb_eci.setSelected(true);
        cb_kds.setSelected(true);
        cb_hws.setSelected(true);
        cb_pie.setSelected(true);
        cb_pah.setSelected(true);
        cb_pbs.setSelected(true);
        cb_ptt.setSelected(true);
        cb_eps.setSelected(true);
        cb_gcp1.setSelected(true);
        cb_gcp2.setSelected(true);
    }

    private void selectAllAminoAcidPropertiesTab2() {
        cb_t2.setSelected(true);
        cb_t3.setSelected(true);
        cb_t4.setSelected(true);
        cb_vhse1.setSelected(true);
        cb_vhse4.setSelected(true);
        cb_vhse6.setSelected(true);
        cb_vhse7.setSelected(true);
        cb_vhse8.setSelected(true);
    }

    private void selectAllAminoAcidPropertiesMDLOVISTab() {
        cb_mdl1.setSelected(true);
        cb_mdl2.setSelected(true);
        cb_mdl3.setSelected(true);
        cb_mdl4.setSelected(true);
        cb_mdl5.setSelected(true);
        cb_mdl6.setSelected(true);
    }

    private void selectAllAminoAcidPropertiesQubilsMIDASTab() {
        cb_mid1.setSelected(true);
        cb_mid2.setSelected(true);
        cb_mid3.setSelected(true);
        cb_mid4.setSelected(true);
        cb_mid5.setSelected(true);
        cb_mid6.setSelected(true);
        cb_mid7.setSelected(true);
        cb_mid8.setSelected(true);
        cb_mid9.setSelected(true);
    }

    private void unselectAllAminoAcidPropertiesTab0() {
        
      cb_unit.setSelected(false);
    }
    
    private void unselectAllAminoAcidPropertiesTab1() {
        cb_AminoAcidMass.setSelected(false);
        cb_SideChainVolume.setSelected(false);
        cb_z1.setSelected(false);
        cb_z2.setSelected(false);
        cb_z3.setSelected(false);
        cb_isa.setSelected(false);
        cb_eci.setSelected(false);
        cb_kds.setSelected(false);
        cb_hws.setSelected(false);
        cb_pie.setSelected(false);
        cb_pah.setSelected(false);
        cb_pbs.setSelected(false);
        cb_ptt.setSelected(false);
        cb_eps.setSelected(false);
        cb_gcp1.setSelected(false);
        cb_gcp2.setSelected(false);
    }

    private void unselectAllAminoAcidPropertiesTab2() {
        cb_t2.setSelected(false);
        cb_t3.setSelected(false);
        cb_t4.setSelected(false);
        cb_vhse1.setSelected(false);
        cb_vhse4.setSelected(false);
        cb_vhse6.setSelected(false);
        cb_vhse7.setSelected(false);
        cb_vhse8.setSelected(false);
    }

    private void unselectAllAminoAcidMDLOVISTab() {
        cb_mdl1.setSelected(false);
        cb_mdl2.setSelected(false);
        cb_mdl3.setSelected(false);
        cb_mdl4.setSelected(false);
        cb_mdl5.setSelected(false);
        cb_mdl6.setSelected(false);
    }

    private void unselectAllAminoAcidQubilsMIDASTab() {
        cb_mid1.setSelected(false);
        cb_mid2.setSelected(false);
        cb_mid3.setSelected(false);
        cb_mid4.setSelected(false);
        cb_mid5.setSelected(false);
        cb_mid6.setSelected(false);
        cb_mid7.setSelected(false);
        cb_mid8.setSelected(false);
        cb_mid9.setSelected(false);
    }

    private void actionAminoAcidPropertiesTab0(JCheckBox cb) {
        if (!cb.isSelected()) {
            currentAminoacidPropertiesTab0--;
            unitPropertyToggleButton.setSelected(false);
            unitPropertyToggleButton.setText("Check");
        } else {
            currentAminoacidPropertiesTab0++;
            if (currentAminoacidPropertiesTab0 == TOTAL_UNIT_PROPERTIES) {
                unitPropertyToggleButton.setSelected(true);
                unitPropertyToggleButton.setText("Uncheck");
            }
        }
    }
    private void actionAminoAcidPropertiesTab1(JCheckBox cb) {
        if (!cb.isSelected()) {
            currentAminoacidPropertiesTab1--;
            aminoAcidPropertyToggleButton.setSelected(false);
            aminoAcidPropertyToggleButton.setText("Check");
        } else {
            currentAminoacidPropertiesTab1++;
            if (currentAminoacidPropertiesTab1 == TOTAL_AMINOACID_PROPERTIESTAB1) {
                aminoAcidPropertyToggleButton.setSelected(true);
                aminoAcidPropertyToggleButton.setText("Uncheck");
            }
        }

    }

    private void actionAminoAcidPropertiesTab2(JCheckBox cb) {
        if (!cb.isSelected()) {
            currentAminoacidPropertiesTab2--;
            aminoAcidPropertyToggleButton1.setSelected(false);
            aminoAcidPropertyToggleButton1.setText("Check");
        } else {
            currentAminoacidPropertiesTab2++;
            if (currentAminoacidPropertiesTab2 == TOTAL_AMINOACID_PROPERTIESTAB2) {
                aminoAcidPropertyToggleButton1.setSelected(true);
                aminoAcidPropertyToggleButton1.setText("Uncheck");
            }
        }

    }

    private void actionAminoAcidPropertiesMDLOVISTab(JCheckBox cb) {
        if (!cb.isSelected()) {
            currentMDLOVIsProperties--;
            mdlovisToggleButton.setSelected(false);
            mdlovisToggleButton.setText("Check");
        } else {
            currentMDLOVIsProperties++;
            if (currentMDLOVIsProperties == TOTAL_AMINOACID_PROPERTIES_MDLOVISTAB) {
                mdlovisToggleButton.setSelected(true);
                mdlovisToggleButton.setText("Uncheck");
            }
        }

    }

    private void actionAminoAcidPropertiesQuBilsMIDASTab(JCheckBox cb) {
        if (!cb.isSelected()) {
            currentQuBilsMIDASProperties--;
            qubilsmidasToggleButton.setSelected(false);
            qubilsmidasToggleButton.setText("Check");
        } else {
            currentQuBilsMIDASProperties++;
            if (currentQuBilsMIDASProperties == TOTAL_AMINOACID_PROPERTIES_QUBILSMIDASTAB) {
                qubilsmidasToggleButton.setSelected(true);
                qubilsmidasToggleButton.setText("Uncheck");
            }
        }

    }

    void readConfiguration(Element root) {
        b_uncheck_all.doClick();

        Element e = (Element) root.getFirstChildElement("aminoacid_properties");
        int n = e.getChildCount();

        for (int i = 0; i < n; i++) {
            if (e.getChild(i) instanceof Element) {
                setPropertiesPanelAttribute(((Element) e.getChild(i)).getLocalName());
            }
        }
        generate();
    }

    void saveConfiguration(Element root) {

        Element aminoAcidProperties = new Element("aminoacid_properties");

        for (String prop : list_AminoacidProperties) {
            aminoAcidProperties.appendChild(new Element(prop.toLowerCase()));
        }

        root.appendChild(aminoAcidProperties);
    }

    private void setPropertiesPanelAttribute(String attribute) {
        switch (attribute.toLowerCase()) {
            //aminoacid properties
            case "side_chain_mass":
                cb_AminoAcidMass.setSelected(true);
                break;
            case "side_chain_volume":
                cb_SideChainVolume.setSelected(true);
                break;
            case "z1":
                cb_z1.setSelected(true);
                break;
            case "z2":
                cb_z2.setSelected(true);
                break;
            case "z3":
                cb_z3.setSelected(true);
                break;
            case "eci":
                cb_eci.setSelected(true);
                break;
            case "isa":
                cb_isa.setSelected(true);
                break;
            case "hws":
                cb_hws.setSelected(true);
                break;
            case "kds":
                cb_kds.setSelected(true);
                break;
            case "pie":
                cb_pie.setSelected(true);
                break;
            case "pah":
                cb_pah.setSelected(true);
                break;
            case "pbs":
                cb_pbs.setSelected(true);
                break;
            case "ptt":
                cb_ptt.setSelected(true);
                break;
            case "eps":
                cb_eps.setSelected(true);
                break;
            case "gcp1":
                cb_gcp1.setSelected(true);
                break;
            case "gcp2":
                cb_gcp2.setSelected(true);
                break;
            case "unit":
                cb_unit.setSelected(true);
                break;
            case "vhse1":
                cb_vhse1.setSelected(true);
                break;
            case "vhse4":
                cb_vhse4.setSelected(true);
                break;
            case "vhse6":
                cb_vhse6.setSelected(true);
                break;
            case "vhse7":
                cb_vhse7.setSelected(true);
                break;
            case "vhse8":
                cb_vhse8.setSelected(true);
                break;
            case "t2":
                cb_t2.setSelected(true);
                break;
            case "t3":
                cb_t3.setSelected(true);
                break;
            case "t4":
                cb_t4.setSelected(true);
                break;
            case "mdl1":
                cb_mdl1.setSelected(true);
                break;
            case "mdl2":
                cb_mdl2.setSelected(true);
                break;
            case "mdl3":
                cb_mdl3.setSelected(true);
                break;
            case "mdl4":
                cb_mdl4.setSelected(true);
                break;
            case "mdl5":
                cb_mdl5.setSelected(true);
                break;
            case "mdl6":
                cb_mdl6.setSelected(true);
                break;
            case "mid1":
                cb_mid1.setSelected(true);
                break;
            case "mid2":
                cb_mid2.setSelected(true);
                break;
            case "mid3":
                cb_mid3.setSelected(true);
                break;
            case "mid4":
                cb_mid4.setSelected(true);
                break;
            case "mid5":
                cb_mid5.setSelected(true);
                break;
            case "mid6":
                cb_mid6.setSelected(true);
                break;
            case "mid7":
                cb_mid7.setSelected(true);
                break;
            case "mid8":
                cb_mid8.setSelected(true);
                break;
            case "mid9":
                cb_mid9.setSelected(true);
                break;
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel UnitPropertiesPanel;
    private javax.swing.JPanel aminoAcidPropertiesPanel;
    private javax.swing.JPanel aminoAcidPropertiesPanel1;
    private javax.swing.JToggleButton aminoAcidPropertyToggleButton;
    private javax.swing.JToggleButton aminoAcidPropertyToggleButton1;
    private javax.swing.JButton b_check_all;
    private javax.swing.JButton b_ok;
    private javax.swing.JButton b_uncheck_all;
    private javax.swing.JCheckBox cb_AminoAcidMass;
    private javax.swing.JCheckBox cb_SideChainVolume;
    private javax.swing.JCheckBox cb_eci;
    private javax.swing.JCheckBox cb_eps;
    private javax.swing.JCheckBox cb_gcp1;
    private javax.swing.JCheckBox cb_gcp2;
    private javax.swing.JCheckBox cb_hws;
    private javax.swing.JCheckBox cb_isa;
    private javax.swing.JCheckBox cb_kds;
    private javax.swing.JCheckBox cb_mdl1;
    private javax.swing.JCheckBox cb_mdl2;
    private javax.swing.JCheckBox cb_mdl3;
    private javax.swing.JCheckBox cb_mdl4;
    private javax.swing.JCheckBox cb_mdl5;
    private javax.swing.JCheckBox cb_mdl6;
    private javax.swing.JCheckBox cb_mid1;
    private javax.swing.JCheckBox cb_mid2;
    private javax.swing.JCheckBox cb_mid3;
    private javax.swing.JCheckBox cb_mid4;
    private javax.swing.JCheckBox cb_mid5;
    private javax.swing.JCheckBox cb_mid6;
    private javax.swing.JCheckBox cb_mid7;
    private javax.swing.JCheckBox cb_mid8;
    private javax.swing.JCheckBox cb_mid9;
    private javax.swing.JCheckBox cb_pah;
    private javax.swing.JCheckBox cb_pbs;
    private javax.swing.JCheckBox cb_pie;
    private javax.swing.JCheckBox cb_ptt;
    private javax.swing.JCheckBox cb_t2;
    private javax.swing.JCheckBox cb_t3;
    private javax.swing.JCheckBox cb_t4;
    private javax.swing.JCheckBox cb_unit;
    private javax.swing.JCheckBox cb_vhse1;
    private javax.swing.JCheckBox cb_vhse4;
    private javax.swing.JCheckBox cb_vhse6;
    private javax.swing.JCheckBox cb_vhse7;
    private javax.swing.JCheckBox cb_vhse8;
    private javax.swing.JCheckBox cb_z1;
    private javax.swing.JCheckBox cb_z2;
    private javax.swing.JCheckBox cb_z3;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel mdlovisPanel;
    private javax.swing.JToggleButton mdlovisToggleButton;
    private javax.swing.JTabbedPane propertiesTabbedPane;
    private javax.swing.JPanel qubilsmidasPanel;
    private javax.swing.JToggleButton qubilsmidasToggleButton;
    private javax.swing.JToggleButton unitPropertyToggleButton;
    // End of variables declaration//GEN-END:variables

    void generate() {
        b_ok.doClick();
    }

    public static void main(String args[]) {


        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                PropertiesDialog dialog = new PropertiesDialog(new javax.swing.JFrame());
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
                //dialog.setVisible(true);
            }
        });
    }

}
