/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */
package tomocomd.camps.mdlais.gui.ui;

import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.FilenameFilter;
import java.io.IOException;
import java.util.prefs.Preferences;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import tomocomd.camps.mdlais.gui.CDKdesc;

/**
 *
 * @author jricardo
 */
public class ExampleDataDialog extends javax.swing.JDialog {

    private CDKdesc cdk;

    public ExampleDataDialog(CDKdesc parent, boolean modal) throws IOException {
        super(parent, modal);
        this.cdk = parent;
        setIconImage(new ImageIcon(getClass().getResource("/tomocomd/camps/mdlais/gui/data/appico.png")).getImage());
        initComponents();

        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation(screen.width / 2 - getSize().width / 2, screen.height / 2 - getSize().height / 2);

        jTextPane8.setPage(getClass().getResource("/tomocomd/camps/mdlais/gui/data/webpages/exampledata/description.html"));

        jTextPane1.setPage(getClass().getResource("/tomocomd/camps/mdlais/gui/data/webpages/exampledata/data1.html"));
        jTextPane2.setPage(getClass().getResource("/tomocomd/camps/mdlais/gui/data/webpages/exampledata/data2.html"));
        jTextPane3.setPage(getClass().getResource("/tomocomd/camps/mdlais/gui/data/webpages/exampledata/data3.html"));
        jTextPane4.setPage(getClass().getResource("/tomocomd/camps/mdlais/gui/data/webpages/exampledata/data4.html"));
        jTextPane5.setPage(getClass().getResource("/tomocomd/camps/mdlais/gui/data/webpages/exampledata/data5.html"));
        jTextPane6.setPage(getClass().getResource("/tomocomd/camps/mdlais/gui/data/webpages/exampledata/data6.html"));
        jTextPane7.setPage(getClass().getResource("/tomocomd/camps/mdlais/gui/data/webpages/exampledata/data7.html"));
        jTextPane9.setPage(getClass().getResource("/tomocomd/camps/mdlais/gui/data/webpages/exampledata/data8.html"));
        
        jButton2.setEnabled(!((CDKdesc) parent).isComputingDescriptors());
        jButton3.setEnabled(!((CDKdesc) parent).isComputingDescriptors());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane8 = new javax.swing.JTextPane();
        jTabbedPaneData = new javax.swing.JTabbedPane();
        jScrollPaneData1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPaneData2 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jScrollPaneData3 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        jScrollPaneData4 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        jScrollPaneData5 = new javax.swing.JScrollPane();
        jTextPane5 = new javax.swing.JTextPane();
        jScrollPaneData6 = new javax.swing.JScrollPane();
        jTextPane6 = new javax.swing.JTextPane();
        jScrollPaneData7 = new javax.swing.JScrollPane();
        jTextPane7 = new javax.swing.JTextPane();
        jScrollPaneData8 = new javax.swing.JScrollPane();
        jTextPane9 = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Example Data");
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(780, 500));
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jScrollPane3.setMaximumSize(new java.awt.Dimension(750, 240));
        jScrollPane3.setMinimumSize(new java.awt.Dimension(750, 240));
        jScrollPane3.setName(""); // NOI18N
        jScrollPane3.setPreferredSize(new java.awt.Dimension(750, 240));
        jScrollPane3.setRequestFocusEnabled(false);

        jTextPane8.setEditable(false);
        jTextPane8.setToolTipText("");
        jTextPane8.setMaximumSize(new java.awt.Dimension(400, 240));
        jTextPane8.setMinimumSize(new java.awt.Dimension(400, 240));
        jTextPane8.setPreferredSize(new java.awt.Dimension(400, 240));
        jScrollPane3.setViewportView(jTextPane8);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jScrollPane3, gridBagConstraints);

        jTabbedPaneData.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jTabbedPaneData.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPaneData.setToolTipText("Select a Example Data for Details...");
        jTabbedPaneData.setAutoscrolls(true);
        jTabbedPaneData.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTabbedPaneData.setFocusCycleRoot(true);
        jTabbedPaneData.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTabbedPaneData.setMaximumSize(new java.awt.Dimension(750, 200));
        jTabbedPaneData.setMinimumSize(new java.awt.Dimension(750, 200));
        jTabbedPaneData.setNextFocusableComponent(jScrollPaneData2);
        jTabbedPaneData.setPreferredSize(new java.awt.Dimension(750, 200));

        jScrollPaneData1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPaneData1.setMaximumSize(new java.awt.Dimension(360, 145));
        jScrollPaneData1.setMinimumSize(new java.awt.Dimension(360, 145));
        jScrollPaneData1.setPreferredSize(new java.awt.Dimension(360, 145));

        jTextPane1.setEditable(false);
        jTextPane1.setContentType(""); // NOI18N
        jTextPane1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTextPane1.setText("\n"); // NOI18N
        jTextPane1.setAutoscrolls(false);
        jScrollPaneData1.setViewportView(jTextPane1);

        jTabbedPaneData.addTab("Data 1: Unsupervised data 152 proteins", jScrollPaneData1);

        jScrollPaneData2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPaneData2.setMaximumSize(new java.awt.Dimension(360, 145));
        jScrollPaneData2.setMinimumSize(new java.awt.Dimension(360, 145));
        jScrollPaneData2.setPreferredSize(new java.awt.Dimension(360, 145));

        jTextPane2.setEditable(false);
        jTextPane2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTextPane2.setText("\n"); // NOI18N
        jScrollPaneData2.setViewportView(jTextPane2);

        jTabbedPaneData.addTab("Data 2: SCOP Classification 204 proteins", jScrollPaneData2);

        jScrollPaneData3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPaneData3.setMaximumSize(new java.awt.Dimension(360, 145));
        jScrollPaneData3.setMinimumSize(new java.awt.Dimension(360, 145));
        jScrollPaneData3.setPreferredSize(new java.awt.Dimension(360, 145));

        jTextPane3.setEditable(false);
        jTextPane3.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTextPane3.setText("\n"); // NOI18N
        jScrollPaneData3.setViewportView(jTextPane3);

        jTabbedPaneData.addTab("Data 3: Fold rate prediction 95 proteins", jScrollPaneData3);

        jScrollPaneData4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPaneData4.setMaximumSize(new java.awt.Dimension(360, 145));
        jScrollPaneData4.setMinimumSize(new java.awt.Dimension(360, 145));
        jScrollPaneData4.setPreferredSize(new java.awt.Dimension(360, 145));

        jTextPane4.setEditable(false);
        jTextPane4.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTextPane4.setText("\n"); // NOI18N
        jScrollPaneData4.setViewportView(jTextPane4);

        jTabbedPaneData.addTab("Data 4 : ACE Inhibitory Activity           ", jScrollPaneData4);

        jScrollPaneData5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPaneData5.setMaximumSize(new java.awt.Dimension(360, 145));
        jScrollPaneData5.setMinimumSize(new java.awt.Dimension(360, 145));
        jScrollPaneData5.setPreferredSize(new java.awt.Dimension(360, 145));

        jTextPane5.setEditable(false);
        jTextPane5.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTextPane5.setText("\n"); // NOI18N
        jScrollPaneData5.setViewportView(jTextPane5);

        jTabbedPaneData.addTab("Data5: DPP IV Inhibitory Activity         ", jScrollPaneData5);

        jScrollPaneData6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPaneData6.setMaximumSize(new java.awt.Dimension(360, 145));
        jScrollPaneData6.setMinimumSize(new java.awt.Dimension(360, 145));
        jScrollPaneData6.setPreferredSize(new java.awt.Dimension(360, 145));

        jTextPane6.setEditable(false);
        jTextPane6.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTextPane6.setText("\n"); // NOI18N
        jScrollPaneData6.setViewportView(jTextPane6);

        jTabbedPaneData.addTab("Data 6: Bitter                                   ", jScrollPaneData6);

        jScrollPaneData7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPaneData7.setMaximumSize(new java.awt.Dimension(360, 145));
        jScrollPaneData7.setMinimumSize(new java.awt.Dimension(360, 145));
        jScrollPaneData7.setPreferredSize(new java.awt.Dimension(360, 145));

        jTextPane7.setEditable(false);
        jTextPane7.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTextPane7.setText("\n"); // NOI18N
        jScrollPaneData7.setViewportView(jTextPane7);

        jTabbedPaneData.addTab("Data 7: Umami                                  ", jScrollPaneData7);

        jScrollPaneData8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPaneData8.setMaximumSize(new java.awt.Dimension(360, 145));
        jScrollPaneData8.setMinimumSize(new java.awt.Dimension(360, 145));
        jScrollPaneData8.setPreferredSize(new java.awt.Dimension(360, 145));

        jTextPane9.setEditable(false);
        jTextPane9.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTextPane9.setText("\n"); // NOI18N
        jScrollPaneData8.setViewportView(jTextPane9);

        jTabbedPaneData.addTab("Data 8: AMP                                    ", jScrollPaneData8);

        jTabbedPaneData.setSelectedComponent(jScrollPaneData1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
        getContentPane().add(jTabbedPaneData, gridBagConstraints);
        jTabbedPaneData.getAccessibleContext().setAccessibleName("");

        jButton1.setText("Close");
        jButton1.setMaximumSize(new java.awt.Dimension(115, 27));
        jButton1.setMinimumSize(new java.awt.Dimension(115, 27));
        jButton1.setPreferredSize(new java.awt.Dimension(115, 27));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        getContentPane().add(jButton1, gridBagConstraints);

        jButton2.setText("Files...");
        jButton2.setMaximumSize(new java.awt.Dimension(115, 27));
        jButton2.setMinimumSize(new java.awt.Dimension(115, 27));
        jButton2.setPreferredSize(new java.awt.Dimension(115, 27));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        getContentPane().add(jButton2, gridBagConstraints);

        jButton3.setText("Load Data");
        jButton3.setMaximumSize(new java.awt.Dimension(80, 27));
        jButton3.setMinimumSize(new java.awt.Dimension(80, 27));
        jButton3.setPreferredSize(new java.awt.Dimension(115, 27));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 35;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        getContentPane().add(jButton3, gridBagConstraints);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tomocomd/camps/mdlais/gui/data/tipsdown.png"))); // NOI18N
        jButton5.setText("Next");
        jButton5.setMaximumSize(new java.awt.Dimension(115, 27));
        jButton5.setMinimumSize(new java.awt.Dimension(115, 27));
        jButton5.setPreferredSize(new java.awt.Dimension(115, 27));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        getContentPane().add(jButton5, gridBagConstraints);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tomocomd/camps/mdlais/gui/data/tipsup.png"))); // NOI18N
        jButton6.setText("Prev");
        jButton6.setMaximumSize(new java.awt.Dimension(115, 27));
        jButton6.setMinimumSize(new java.awt.Dimension(115, 27));
        jButton6.setPreferredSize(new java.awt.Dimension(115, 27));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
        getContentPane().add(jButton6, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        int nextItem = jTabbedPaneData.getSelectedIndex() - 1;
        if (nextItem < 0) {
            nextItem = jTabbedPaneData.getTabCount() - 1;
        }

        jTabbedPaneData.setSelectedIndex(nextItem);

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        int nextItem = jTabbedPaneData.getSelectedIndex() + 1;
        if (nextItem >= jTabbedPaneData.getTabCount()) {
            nextItem = 0;
        }

        jTabbedPaneData.setSelectedIndex(nextItem);

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        // path to the directory to be opened
        File propertyWorkDir = new File(System.getProperty("user.dir"));

        //append example data path
        propertyWorkDir = new File(propertyWorkDir, "exampledata");

        //append the selected data path
        switch (jTabbedPaneData.getSelectedIndex())
        {
            case 0:
            propertyWorkDir = new File(propertyWorkDir, "data1");
            break;
            case 1:
            propertyWorkDir = new File(propertyWorkDir, "data2");
            break;
            case 2:
            propertyWorkDir = new File(propertyWorkDir, "data3");
            break;
            case 3:
            propertyWorkDir = new File(propertyWorkDir, "data4");
            break;
            case 4:
            propertyWorkDir = new File(propertyWorkDir, "data5");
            break;
            case 5:
            propertyWorkDir = new File(propertyWorkDir, "data6");
            break;
            case 6:
            propertyWorkDir = new File(propertyWorkDir, "data7");
            break;
            case 7:
            propertyWorkDir = new File(propertyWorkDir, "data8");
            break;
            default:
            return;
        }

        Preferences prefs = Preferences.userNodeForPackage(ApplicationUI.class);

        prefs.put("LAST_INPUT_DIR", propertyWorkDir.toString());

        final File[] inputFiles = propertyWorkDir.listFiles(new FilenameFilter() {

            @Override
            public boolean accept(File dir, String name) {
                return name.endsWith(".fasta");
            }
        });
        SwingUtilities.invokeLater(new Runnable()
            {
                @Override
                public void run()
                {
                    // show the progress dialog

                    FastaCuratorJDialog fc = new FastaCuratorJDialog(cdk, true);

                    fc.setInputFiles(inputFiles);

                    fc.setVisible(true);
                }
            });

            //        JOptionPane.showMessageDialog(getParent(), "Successful Loaded Data: \n "
                //                + jTabbedPaneData.getTitleAt(jTabbedPaneData.getSelectedIndex())
                //                + "\n"
                //                + "at directory: \n"
                //                + propertyWorkDir
                //                + "\n\n"
                //                + "Click the Browse button to select the desired file format for the example data\n"
                //                + "\n"
                //                + "Configure QuBiLs-MAS options and apply changes",
                //                "Information", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        // path to the directory to be opened
        File propertyWorkDir = new File(System.getProperty("user.dir"));

        //append example data path
        propertyWorkDir = new File(propertyWorkDir, "exampledata");

        //append the selected data path
        switch (jTabbedPaneData.getSelectedIndex()) {
            case 0:
            propertyWorkDir = new File(propertyWorkDir, "data1");
            break;
            case 1:
            propertyWorkDir = new File(propertyWorkDir, "data2");
            break;
            case 2:
            propertyWorkDir = new File(propertyWorkDir, "data3");
            break;
            case 3:
            propertyWorkDir = new File(propertyWorkDir, "data4");
            break;
            case 4:
            propertyWorkDir = new File(propertyWorkDir, "data5");
            break;
            case 5:
            propertyWorkDir = new File(propertyWorkDir, "data6");
            break;
            case 6:
            propertyWorkDir = new File(propertyWorkDir, "data7");
            break;
            case 7:
            propertyWorkDir = new File(propertyWorkDir, "data8");
            break;
            default:
            break;
        }

        // Before more Desktop API is used, first check
        // whether the API is supported by this particular
        // virtual machine (VM) on this particular host.
        if (Desktop.isDesktopSupported()) {
            try {
                Desktop desktop = Desktop.getDesktop();
                desktop.open(propertyWorkDir);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(getParent(), " ERROR open directory: \n "
                    + "--> " + propertyWorkDir + " \n"
                    + "restart the application or check the file system",
                    "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(getParent(), " ERROR getting Desktop API \n "
                + "this class is NOT supported on the current platform \n"
                + "restart the application or Resinstal the JRE",
                "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPaneData1;
    private javax.swing.JScrollPane jScrollPaneData2;
    private javax.swing.JScrollPane jScrollPaneData3;
    private javax.swing.JScrollPane jScrollPaneData4;
    private javax.swing.JScrollPane jScrollPaneData5;
    private javax.swing.JScrollPane jScrollPaneData6;
    private javax.swing.JScrollPane jScrollPaneData7;
    private javax.swing.JScrollPane jScrollPaneData8;
    private javax.swing.JTabbedPane jTabbedPaneData;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextPane jTextPane3;
    private javax.swing.JTextPane jTextPane4;
    private javax.swing.JTextPane jTextPane5;
    private javax.swing.JTextPane jTextPane6;
    private javax.swing.JTextPane jTextPane7;
    private javax.swing.JTextPane jTextPane8;
    private javax.swing.JTextPane jTextPane9;
    // End of variables declaration//GEN-END:variables
}
